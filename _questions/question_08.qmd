<!-- question-type: inclass -->
### Exercise 8: Write Your Own Code

a. Add new code chunk to store a vector, called `my_vector` that contains each of the numbers 1 through 5. You can produce that vector using `c(1,2,3,4,5)`
b. Calculate the mean of `my_vector` by applying the `mean()` function.
c. Add a comment above your code that computes the mean to describe what it does. You can add a comment using the hashtag to start a line inside an R chunk like this `# This is a comment`
d. Now use the Console to search for help on the function that returns the median value in a numeric vector, `?median`.

<!-- BEGIN PROFILE:r-teaching-guide -->
::: {.content-visible when-profile="r-teaching-guide"}

::: {.teaching-block}

::: {.teaching-block-header}
Teaching Note
:::

::: {.teaching-block-body}

🎯 Learning Objective

Students should:

- Create and store a numeric vector in R using `c()`
- Apply basic built-in functions (`mean()`, `median()`) to a vector
- Add meaningful code comments using `#`
- Use R’s help system to explore and understand functions independently

This question strengthens fluency with R syntax and introduces good habits around documentation and self-help.

✅  **Core Concepts to Highlight**

- Vectors are the fundamental data structure in R — c() combines values into a vector
- Functions operate on objects — here mean() and median() summarize a vector
- Code comments improve clarity and make code easier to understand
- The help system (`?function_name`) is how analysts explore arguments, usage, and examples directly in R. Also show how to get help in the help pane.

💬 **Suggested In-Class Prompts**

“What’s the difference between `mean(my_vector)` and `median(my_vector)`?”

“Try changing your vector — what happens to the mean vs. the median if you add an extreme number?”

“How could you find out what other arguments a function accepts?”

“Why might a comment be useful even when the code is ‘obvious’?”

You can extend this into a discussion of robustness or communication depending on time.

📌 **Common Misunderstandings**

- Forgetting to assign the vector to a variable (`my_vector <- ...`)
- Typing `mean = (my_vector)` instead of `mean(my_vector)` — parentheses vs. equals
- Writing comments incorrectly (e.g. forgetting the `#`, or placing it inside a code line)
- Typing `?median` inside the document rather than the Console — remind them the Console is for help and experimentation

:::

:::

:::
<!-- END PROFILE:r-teaching-guide -->

<!-- BEGIN PROFILE:r-solutions -->
::: {.content-visible when-profile="r-solutions" when-profile="r-teaching-guide"}

::: {.solution-block}

::: {.solution-block-header}
Solution
:::

::: {.solution-block-body}

**a.**

```{r}
my_vector <- c(1,2,3,4,5)
```


**b.**
```{r}
mean(my_vector)

# or 
my_mean <- mean(my_vector)
print(my_mean)
```

**c.**
```{r}
# this code computes the mean and stores it
my_mean <- mean(my_vector)
print(my_mean)
```

**d.**

```{r, eval = FALSE}
?median
```

:::

:::

:::
<!-- END PROFILE:r-solutions -->
